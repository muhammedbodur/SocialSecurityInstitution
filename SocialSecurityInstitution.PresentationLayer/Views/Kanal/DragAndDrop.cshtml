@{
    string RandomString(int length)
    {
        const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        var random = new Random();
        return new string(Enumerable.Repeat(chars, length)
                .Select(s => s[random.Next(s.Length)]).ToArray());
    }
}

@section Styles {
    <style>
        .cursor-move {
            cursor: move;
        }

        .selected {
            background-color: #f0f0f0;
        }

        .sortable-ghost {
            opacity: 0.4;
        }

        .sortable-chosen {
            background-color: #e0e0e0;
        }

        .sortable-drag {
            opacity: 0.6;
        }
    </style>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#kanallar li:first-child').addClass('selected');

            // Kanallar ve alt kanalları saklamak için dict oluştur
            var altKanallar = {};

            // Kanal ID'lerini toplamak için array oluştur
            var kanalIds = [];

            // Her bir kanalın alt kanallarını sakla
            $('#kanallar li').each(function () {
                var kanalId = $(this).attr('id');
                altKanallar[kanalId] = [];
                kanalIds.push(kanalId);
            });

            function ul_li_select_kaldir() {
                $('#kanallar li').removeClass('selected');
                $('#kanallar li').css('background-color', '');
            }

            function ul_li_select_ekle(select) {
                // Tıklanan öğeyi seçili yap
                var itemId = $(select).attr('id');
                $(select).addClass('selected');
                $(select).css('background-color', '#f0f0f0');
            }

            $('#kanallar li').click(function () {
                // Seçili öğelerin seçimini kaldır
                ul_li_select_kaldir();

                // Tıklanan öğeyi seçili yap
                ul_li_select_ekle(this);

                var kanalId = $(this).attr('id');
                $('#pending-tasks').empty(); // Önceki alt kanalları temizle
                altKanallar[kanalId].forEach(function (altKanal) {
                    console.log(altKanal);
                    $('#pending-tasks').append('<li class="list-group-item drag-item">' + altKanal + '</li>');
                });
            });
            
            const pendingTasks = document.getElementById('pending-tasks');
            const completedTasks = document.getElementById('completed-tasks');

            Sortable.create(pendingTasks, {
                group: {
                    name: 'shared',
                    pull: true,
                    put: true
                },
                animation: 150,
                handle: '.drag-item',
                ghostClass: 'sortable-ghost',
                chosenClass: 'sortable-chosen',
                dragClass: 'sortable-drag',
                onAdd: function (evt) {
                    // Alt kanalları seçili kanala ekle
                    var selectedChannel = $('#kanallar .selected');
                    if (selectedChannel.length > 0) {
                        var kanalId = selectedChannel.attr('id');
                        var item = evt.item; // Sürüklenen öğe
                        var itemId = $(item).text();

                        // Alt kanalları güncelle
                        altKanallar[kanalId].push(itemId);
                    }
                },
                onRemove: function (evt) {
                    // Alt kanalları seçili kanaldan çıkar
                    var selectedChannel = $('#kanallar .selected');
                    if (selectedChannel.length > 0) {
                        var kanalId = selectedChannel.attr('id');
                        var item = evt.item; // Sürüklenen öğe
                        var itemId = $(item).text();

                        // Alt kanallardan öğeyi çıkar
                        altKanallar[kanalId] = altKanallar[kanalId].filter(function (altKanal) {
                            return altKanal !== itemId;
                        });
                    }
                }
            });
            Sortable.create(completedTasks, {
                group: {
                    name: 'shared',
                    pull: true,
                    put: true
                },
                animation: 150,
                handle: '.drag-item',
                ghostClass: 'sortable-ghost',
                chosenClass: 'sortable-chosen',
                dragClass: 'sortable-drag',
                onAdd: function (evt) {
                    // Alt kanalları seçili kanaldan çıkar
                    var selectedChannel = $('#kanallar .selected');
                    if (selectedChannel.length > 0) {
                        var kanalId = selectedChannel.attr('id');
                        var item = evt.item; // Sürüklenen öğe
                        var itemId = $(item).text();

                        // Alt kanallardan öğeyi çıkar
                        altKanallar[kanalId] = altKanallar[kanalId].filter(function (altKanal) {
                            return altKanal !== itemId;
                        });
                    }
                }
            });
        });
    </script>
}

<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header text-center">
                <h5 class="m-0">Kanal / Alt Kanal Eşleştirme</h5>
            </div>
            <div class="card-body pb-0">
                <div class="row">
                    <div class="col-md-4 col-sm-6 col-12 mb-4">
                        <div class="card">
                            <div class="card-header text-center">
                                <h6 class="m-0">Kanallar</h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush" id="kanallar">
                                    @for (int i = 1; i <= 20; i++)
                                    {
                                        <li class="list-group-item" id="kanal_@i">Kanal @i</li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-12 mb-4">
                        <div class="card">
                            <div class="card-header text-center">
                                <h6 class="m-0">Seçilmiş Alt Kanallar</h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush" id="pending-tasks">
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-12 mb-4">
                        <div class="card">
                            <div class="card-header text-center">
                                <h6 class="m-0">Alt Kanallar</h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush" id="completed-tasks">
                                    @for (int i = 1; i <= 60; i++)
                                    {
                                        <li class="list-group-item drag-item cursor-move d-flex justify-content-between align-items-center" data-bs-whatever="@i">
                                            <span data-bs-whatever="@i">@(i.ToString() + "-" + RandomString(10))</span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

