@using SocialSecurityInstitution.BusinessObjectLayer.CommonDtoEntities
@using SocialSecurityInstitution.BusinessObjectLayer.CommonEntities
@using SocialSecurityInstitution.BusinessObjectLayer.Extensions

@section Styles {
    <style>
        .cursor-move {
            cursor: move;
        }

        .selected {
            background-color: #f0f0f0;
        }

        .sortable-ghost {
            opacity: 0.4;
        }

        .sortable-chosen {
            background-color: #e0e0e0;
        }

        .sortable-drag {
            opacity: 0.6;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Selectpicker'ın normalleştirme işlevini belirt
            $('.selectpicker').selectpicker({
                liveSearchNormalize: true,
                liveSearch: true
            });

            $('#goButton').click(function () {
                // Seçili departman ID'sini al
                var selectedDepartmanId = $('#departmanlarSelect').val();
                // Seçili hizmet binası ID'sini al
                var selectedHizmetBinasiId = $('#hizmetBinalariSelect').val();

                tumDatalariDoldur(selectedDepartmanId, selectedHizmetBinasiId);
            });

            // Departmanlar değiştirildiğinde
            $('#departmanlarSelect').on('change', function () {
                var selectedDepartmanId = $(this).val();
                hizmetBinalariGetir(selectedDepartmanId);
            });

            // Departmanlar listesini al ve <select> öğesini doldur
            $.ajax({
                url: '/Departman/ListeleJson',
                type: 'GET',
                success: function (data) {
                    var departmanlarSelect = $('#departmanlarSelect');
                    departmanlarSelect.empty();

                    $.each(data, function (index, departman) {
                        if (departman.departmanAktiflik == '1') {
                            departmanlarSelect.append('<option data-tokens="' + departman.departmanId + '" value="' + departman.departmanId + '">' + departman.departmanAdi + '</option>');
                        }
                    });

                    // Selectpicker'ı yenile
                    departmanlarSelect.selectpicker('refresh');

                    $('#hizmetBinalariSelectDiv').show();

                    // İlk departman seçiliyse, ona ait hizmet binalarını getir
                    var firstOptionValue = departmanlarSelect.find('option:first').val();
                    if (firstOptionValue) {
                        hizmetBinalariGetir(firstOptionValue);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    toastr.error('Departmanlar listesi alınamadı.');
                }
            });

            function hizmetBinalariGetir(selectedDepartmanId) {
                // Hizmet binaları için AJAX çağrısı
                $.ajax({
                    url: '/HizmetBinalari/ListeleJson?departmanId=' + selectedDepartmanId,
                    type: 'GET',
                    beforeSend: function () {
                        // Hizmet binaları select kutusunu temizle
                        var hizmetBinalariSelect = $('#hizmetBinalariSelect');
                        hizmetBinalariSelect.empty();
                    },
                    success: function (hizmetBinalari) {
                        var hizmetBinalariSelect = $('#hizmetBinalariSelect');
                        $.each(hizmetBinalari, function (index, hizmetBinasi) {
                            hizmetBinalariSelect.append('<option value="' + hizmetBinasi.hizmetBinasiId + '">' + hizmetBinasi.hizmetBinasiAdi + '</option>');
                        });

                        // Selectpicker'ı yenile
                        hizmetBinalariSelect.selectpicker('refresh');

                        var firstOptionValue = hizmetBinalariSelect.find('option:first').val();
                        if (firstOptionValue) {
                            tumDatalariDoldur(selectedDepartmanId, firstOptionValue);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                        toastr.error('Hizmet binaları listesi alınamadı.');
                    }
                });
            }

            // Selectpicker'ın normalleştirme işlevini belirt
            $('.selectpicker').selectpicker({
                liveSearchNormalize: true,
                liveSearch: true
            });

            function tumDatalariDoldur(departmanId, hizmetBinasiId) {
                $('#tvler').empty(); // Mevcut listeyi temizle
                $('#pending-tasks').empty(); // Mevcut listeyi temizle
                $('#completed-tasks').empty(); // Mevcut listeyi temizle

                try {
                    // ID'lerin sayısal olup olmadığını kontrol et
                    departmanId = parseInt(departmanId, 10);
                    hizmetBinasiId = parseInt(hizmetBinasiId, 10);

                    if (isNaN(departmanId) || isNaN(hizmetBinasiId)) {
                        alert("ID'ler sayısal olmalı");
                        return false;
                    }

                    try {
                        // Tvleri ve Bankoları eşzamanlı olarak getiriyoruz
                        $.when(
                            tvleriGetir(departmanId, hizmetBinasiId)
                        ).done(function () {
                            // İlk Tvnin ID sini alıyoruz
                            var ilkTv = $('#tvler li:first-child');
                            ilkTv.addClass('selected');
                            var tvId = ilkTv.attr('data-bs-whatever');

                            // Eşleştirilmiş Bankoları Getiriyoruz
                            tvBankoEsletirmeleriGetir(tvId);
                            // Eşleştirilmişmemiş Bankoları Getiriyoruz
                            tvBankolarEslestirilmemisGetir(tvId, hizmetBinasiId);

                            // Olay bağlamalarını burada yapıyoruz
                            $('#tvler li').click(function () {
                                ul_li_select_kaldir();
                                ul_li_select_ekle(this);

                                var tvId = $(this).attr('data-bs-whatever');

                                tvBankoEsletirmeleriGetir(tvId);
                                tvBankolarEslestirilmemisGetir(tvId, hizmetBinasiId);

                                makeSortable();
                            });
                        });
                    } catch (error) {
                        // Hataları yakala ve mesaj göster
                        console.error(error.message);
                        alert("İşlemler Esnasında Sorun Oldu!");
                    }
                } catch (error) {
                    // Hataları yakala ve mesaj göster
                    console.error(error.message);
                    if (error.message.includes("ID'ler sayısal olmalı")) {
                        if (isNaN(departmanId)) {
                            alert("Departman Bilgisi Gelmedi!");
                        }
                        if (isNaN(hizmetBinasiId)) {
                            alert("Hizmet Binası Bilgisi Gelmedi!");
                        }
                    }
                }
            }

            function tvleriGetir(departmanId, hizmetBinasiId) {
                var deferred = $.Deferred();

                try {
                    $.ajax({
                        url: '/Tv/TvleriGetir',
                        type: 'GET',
                        data: { hizmetBinasiId: hizmetBinasiId },
                        success: function (tvler) {

                            $.each(tvler, function (index, tv) {
                                $('#tvler').append(
                                    '<li class="list-group-item d-flex justify-content-between align-items-center" data-bs-whatever="' + tv['tvId'] + '" id="' + tv['tvId'] + '">' +
                                    '<span>' + tv['katTipiAdi'] + '   -   TvId : ' + tv['tvId'] + ' ' + '</span>' +
                                    '<div>' +
                                    '<span id="eslesmisBankoSayi_' + tv['tvId'] + '" class="badge ' + (tv['bankoEslesmeSayisi'] > 0 ? 'bg-success' : 'bg-danger') + '">' + tv['bankoEslesmeSayisi'] + '</span>' +
                                    '</div>' +
                                    '</li>'
                                );
                            });


                            deferred.resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                            toastr.error('Tv Listesi Gelmedi.');
                            deferred.reject(error);
                        }
                    });
                } catch (error) {
                    console.error(error.message);
                    alert("Tvleri Getirirken Sorun Oldu!");
                    deferred.reject(error);
                }

                return deferred.promise();
            }

            function tvBankoEsletirmeleriGetir(tvId) {
                var deferred = $.Deferred();

                try {
                    $('#pending-tasks').empty();

                    $.ajax({
                        url: '/Tv/TvBankolariEslesmisleriGetir',
                        type: 'GET',
                        data: { tvId: tvId },
                        success: function (bankolar) {

                            $.each(bankolar, function (index, banko) {
                                $('#pending-tasks').append('<li class="list-group-item drag-item cursor-move d-flex justify-content-between align-items-center" data-bs-whatever="' + banko['bankoId'] + '" ><span data-bs-whatever="' + banko['bankoId'] + '" > Banko No ' + banko['bankoNo'] + '</span></li>');
                            });

                            deferred.resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                            toastr.error('Banko Listesi Gelmedi.');
                            deferred.reject(error);
                        }
                    });
                } catch (error) {
                    console.error(error.message);
                    alert("Bankoları Getirirken Sorun Oldu!");
                    deferred.reject(error);
                }

                return deferred.promise();
            }

            function tvBankolarEslestirilmemisGetir(tvId, hizmetBinasiId) {
                var deferred = $.Deferred();

                try {
                    $('#completed-tasks').empty();

                    $.ajax({
                        url: '/Tv/TvBankolarEslesmeyenleriGetir',
                        type: 'GET',
                        data: {
                            tvId: tvId,
                            hizmetBinasiId: hizmetBinasiId
                        },
                        success: function (bankolar) {
                            $.each(bankolar, function (index, banko) {
                                $('#completed-tasks').append('<li class="list-group-item drag-item cursor-move d-flex justify-content-between align-items-center" data-bs-whatever="' + banko['bankoId'] + '" ><span data-bs-whatever="' + banko['bankoId'] + '"> Banko No ' + banko['bankoNo'] + '</span></li>');
                            });

                            deferred.resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                            toastr.error('Banko Listesi Gelmedi.');
                            deferred.reject(error);
                        }
                    });
                } catch (error) {
                    console.error(error.message);
                    alert("Bankoları Getirirken Sorun Oldu!");
                    deferred.reject(error);
                }

                return deferred.promise();
            }

            function ul_li_select_kaldir() {
                $('#tvler li').removeClass('selected');
                $('#tvler li').css('background-color', '');
            }

            function ul_li_select_ekle(select) {
                // Tıklanan öğeyi seçili yap
                var itemId = $(select).attr('id');
                $(select).addClass('selected');
                $(select).css('background-color', '#f0f0f0');
            }


            $('#tvler li').click(function () {
                // Seçili öğelerin seçimini kaldır
                ul_li_select_kaldir();

                // Tıklanan öğeyi seçili yap
                ul_li_select_ekle(this);

                tvId = $(this).attr("data-bs-whatever");
                hizmetBinasiId = $("#hizmetBinalariSelect select").val();

                tvBankoEsletirmeleriGetir(tvId);
                tvBankolarEslestirilmemisGetir(tvId, hizmetBinasiId);
            });

            function tvBankoEslestirmeYap(tvId, bankoId) {
                return new Promise((resolve, reject) => {
                    try {
                        tvId = parseInt(tvId, 10);
                        bankoId = parseInt(bankoId, 10);

                        if (isNaN(tvId) || isNaN(bankoId)) {
                            alert("Bilgilerde Sorun Var!");
                            return reject("Bilgilerde Sorun Var!");
                        }

                        $.ajax({
                            url: '/Tv/TvBankoEslestirmeYap',
                            type: 'POST',
                            data: {
                                tvId: tvId,
                                bankoId: bankoId
                            },
                            success: function (data) {
                                if (data.islemDurum == 1) {
                                    toastr.success(data.mesaj);
                                    resolve(true);
                                } else {
                                    toastr.error(data.mesaj);
                                    resolve(false);
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error(error);
                                toastr.error('Tv / Banko Eşleştirmesi Yapılamadı!');
                                reject(error);
                            }
                        });
                    } catch (error) {
                        console.error(error.message);
                        reject(error);
                    }
                });
            }

            function tvBankoEslestirmeKaldir(tvId, bankoId) {
                return new Promise((resolve, reject) => {
                    try {
                        tvId = parseInt(tvId, 10);
                        bankoId = parseInt(bankoId, 10);

                        if (isNaN(tvId) || isNaN(bankoId)) {
                            alert("Bilgilerde Sorun Var!");
                            return reject("Bilgilerde Sorun Var!");
                        }

                        $.ajax({
                            url: '/Tv/TvBankoEslestirmeKaldir',
                            type: 'POST',
                            data: {
                                tvId: tvId,
                                bankoId: bankoId
                            },
                            success: function (data) {
                                if (data.islemDurum == 1) {
                                    toastr.success(data.mesaj);
                                    resolve(true);
                                } else {
                                    toastr.error(data.mesaj);
                                    resolve(false);
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error(error);
                                toastr.error('Tv / Banko Eşleştirmesi Kaldırılamadı!');
                                reject(error);
                            }
                        });
                    } catch (error) {
                        console.error(error.message);
                        reject(error);
                    }
                });
            }

            function makeSortable() {
                const pendingTasks = document.getElementById('pending-tasks');
                const completedTasks = document.getElementById('completed-tasks');

                Sortable.create(pendingTasks, {
                    group: {
                        name: 'shared',
                        pull: true,
                        put: true
                    },
                    animation: 150,
                    handle: '.drag-item',
                    ghostClass: 'sortable-ghost',
                    chosenClass: 'sortable-chosen',
                    dragClass: 'sortable-drag',
                    onAdd: async function (evt) {
                        // Bankoları seçili Tvye ekle
                        var selectedTv = $('#tvler .selected');
                        if (selectedTv.length > 0) {
                            var tvId = selectedTv.attr('data-bs-whatever');
                            var item = evt.item;
                            var bankoId = $(item).attr('data-bs-whatever');

                            try {
                                var result = await tvBankoEslestirmeYap(tvId, bankoId, 1);
                                if (!result) {
                                    evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
                                } else {
                                    var eslesenBankoSayisi = $("#pending-tasks").children().length;
                                    $("#eslesmisBankoSayi_" + tvId).text(eslesenBankoSayisi);
                                    $(selectedTv).find('.badge').removeClass('bg-danger').addClass('bg-success');
                                }
                            } catch (error) {
                                console.error(error.message);
                                alert(error.message);
                                evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
                            }
                        } else {
                            alert("Hatalı İşlem!");
                            evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
                        }
                    }
                });

                Sortable.create(completedTasks, {
                    group: {
                        name: 'shared',
                        pull: true,
                        put: true
                    },
                    animation: 150,
                    handle: '.drag-item',
                    ghostClass: 'sortable-ghost',
                    chosenClass: 'sortable-chosen',
                    dragClass: 'sortable-drag',
                    onAdd: async function (evt) {
                        // Bankoları  ekle
                        var selectedTv = $('#tvler .selected');
                        if (selectedTv.length > 0) {
                            var tvId = selectedTv.attr('data-bs-whatever');
                            var item = evt.item;
                            var bankoId = $(item).attr('data-bs-whatever');

                            try {
                                var result = await tvBankoEslestirmeKaldir(tvId, bankoId);
                                if (!result) {
                                    evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
                                } else {
                                    var eslesenBankoSayisi = $("#pending-tasks").children().length;
                                    $("#eslesmisBankoSayi_" + tvId).text(eslesenBankoSayisi);
                                    $(selectedTv).find('.badge').removeClass('bg-success').addClass('bg-danger');
                                }
                            } catch (error) {
                                console.error(error.message);
                                alert(error.message);
                                evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
                            }
                        } else {
                            alert("Hatalı İşlem!");
                            evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
                        }
                    }
                });
            }

            makeSortable();
        });
    </script>
}

<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header flex-column flex-md-row">
                <div class="card">
                    <div class="card-header flex-md-row" style="display: flex; align-items: center;">
                        <div class="col-sm-4">
                            <label for="departmanlarSelect" class="form-label">Departmanlar</label>
                            <select id="departmanlarSelect" class="selectpicker w-100" data-style="btn-default" data-live-search="true"></select>
                        </div>
                        <div class="col-sm-4">
                            <label for="hizmetBinalariSelect" class="form-label">Hizmet Binaları</label>
                            <select id="hizmetBinalariSelect" class="selectpicker w-100" data-style="btn-default"></select>
                        </div>
                        <div class="col-sm-1 col-4 d-flex align-items-center justify-content-center">
                            <button id="goButton" class="btn btn-primary btn-sm">Getir</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="card">
            <div class="card-header text-center">
                <h5 class="m-0">Tv / Banko Eşleştirme</h5>
            </div>
            <div class="card-body pb-0">
                <div class="row">
                    <div class="col-md-4 col-sm-6 col-12 mb-3">
                        <div class="card">
                            <div class="card-header text-center">
                                <h6 class="m-0">Tvler</h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush" id="tvler">
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-12 mb-3">
                        <div class="card">
                            <div class="card-header text-center">
                                <h6 class="m-0">Tv/Banko Eşleşmeleri</h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush" id="pending-tasks">
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-12 mb-3">
                        <div class="card">
                            <div class="card-header text-center">
                                <h6 class="m-0">Bankolar</h6>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush" id="completed-tasks">
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
